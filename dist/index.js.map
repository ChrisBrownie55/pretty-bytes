{"version":3,"file":"index.js","sources":["../index.ts"],"sourcesContent":["export namespace Units {\n  export type short =\n    | 'B'\n    | 'KiB'\n    | 'MiB'\n    | 'GiB'\n    | 'TiB'\n    | 'PiB'\n    | 'EiB'\n    | 'ZiB'\n    | 'YiB';\n  export type long =\n    | 'bytes'\n    | 'kibibytes'\n    | 'mebibytes'\n    | 'gibibytes'\n    | 'tebibytes'\n    | 'pebibytes'\n    | 'exbibytes'\n    | 'zebibytes'\n    | 'yobibytes';\n}\n\nexport const UNITS: Array<[Units.short, Units.long]> = [\n  ['B', 'bytes'],\n  ['KiB', 'kibibytes'],\n  ['MiB', 'mebibytes'],\n  ['GiB', 'gibibytes'],\n  ['TiB', 'tebibytes'],\n  ['PiB', 'pebibytes'],\n  ['EiB', 'exbibytes'],\n  ['ZiB', 'zebibytes'],\n  ['YiB', 'yobibytes']\n];\n\nexport function format(\n  size: number,\n  locale: string = 'en'\n): [string, Units.short, Units.long] {\n  // Make negative numbers positive\n  const prefix = size < 0 ? '-' : '';\n  size = Math.abs(size);\n\n  // We are solving for `x` in this equation: 1024^x = size\n  // log2(size)/log2(1024) === log2(size)/10 === log1024(size)\n  const magnitude = Math.min(\n    Math.floor(Math.log2(size || 1) / 10),\n    UNITS.length\n  );\n\n  const formattedSize = parseFloat(\n    (size / 1024 ** magnitude || 0).toFixed(3)\n  ).toLocaleString(locale);\n\n  return [prefix + formattedSize, ...UNITS[magnitude]] as [\n    string,\n    Units.short,\n    Units.long\n  ];\n}\n"],"names":["UNITS","size","locale","prefix","Math","abs","magnitude","min","floor","log2","length","parseFloat","toFixed","toLocaleString"],"mappings":"IAuBaA,EAA0C,CACrD,CAAC,IAAK,SACN,CAAC,MAAO,aACR,CAAC,MAAO,aACR,CAAC,MAAO,aACR,CAAC,MAAO,aACR,CAAC,MAAO,aACR,CAAC,MAAO,aACR,CAAC,MAAO,aACR,CAAC,MAAO,sDAIRC,EACAC,kBAAiB,UAGXC,EAASF,EAAO,EAAI,IAAM,GAChCA,EAAOG,KAAKC,IAAIJ,OAIVK,EAAYF,KAAKG,IACrBH,KAAKI,MAAMJ,KAAKK,KAAKR,GAAQ,GAAK,IAClCD,EAAMU,cAOD,CAACP,EAJcQ,YACnBV,WAAO,KAAQK,IAAa,GAAGM,QAAQ,IACxCC,eAAeX,WAEkBF,EAAMM"}